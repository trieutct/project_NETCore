// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sport_Shop.Models;

#nullable disable

namespace Sport_Shop.Migrations
{
    [DbContext(typeof(ShopSportDbConText))]
    partial class ShopSportDbConTextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Sport_Shop.Areas.Admin.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"), 1L, 1);

                    b.Property<string>("TenDanhMuc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Sport_Shop.Areas.Admin.Models.Emoloyee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"), 1L, 1);

                    b.Property<string>("Anh")
                        .IsRequired()
                        .HasColumnType("VARCHAR(200)");

                    b.Property<int>("ChucVu")
                        .HasColumnType("int");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(200)");

                    b.Property<int>("EmployeeAccountId")
                        .HasColumnType("int");

                    b.Property<string>("GioiTinh")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(60)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayVao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("VARCHAR(15)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("EmployeeAccountId")
                        .IsUnique();

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("Sport_Shop.Areas.Admin.Models.EmployeeAccount", b =>
                {
                    b.Property<int>("EmployeeAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeAccountId"), 1L, 1);

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("TaiKhoan")
                        .IsRequired()
                        .HasColumnType("VARCHAR(40)");

                    b.HasKey("EmployeeAccountId");

                    b.ToTable("EmployeeAccount");
                });

            modelBuilder.Entity("Sport_Shop.Areas.Admin.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"), 1L, 1);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayDat")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiNhan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalPrice")
                        .HasColumnType("int");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("Sport_Shop.Areas.Admin.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<string>("Anh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("Gia")
                        .HasColumnType("int");

                    b.Property<int>("GiamGia")
                        .HasColumnType("int");

                    b.Property<int>("HoatDong")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenSanPham")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Sport_Shop.Areas.Admin.Models.ProductSize", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("SizeId")
                        .HasColumnType("int");

                    b.Property<int>("ProductSizeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductSizeId"), 1L, 1);

                    b.Property<int>("SoLuongTon")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "SizeId", "ProductSizeId");

                    b.HasIndex("SizeId");

                    b.ToTable("ProductSize", (string)null);
                });

            modelBuilder.Entity("Sport_Shop.Areas.Admin.Models.Size", b =>
                {
                    b.Property<int>("SizeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SizeId"), 1L, 1);

                    b.Property<string>("TenSize")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(20)");

                    b.HasKey("SizeId");

                    b.HasIndex("TenSize")
                        .IsUnique();

                    b.ToTable("Size", (string)null);
                });

            modelBuilder.Entity("Sport_Shop.Areas.Customer.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"), 1L, 1);

                    b.Property<string>("Anh")
                        .HasColumnType("Varchar(300)");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("GioiTinh")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("HoTen")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("TaiKhoan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Sport_Shop.Areas.Customer.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderDetailId"), 1L, 1);

                    b.Property<int>("Gia")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("SizeId")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("OrderDetailId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SizeId");

                    b.ToTable("OrderDetail", (string)null);
                });

            modelBuilder.Entity("Sport_Shop.Areas.Admin.Models.Emoloyee", b =>
                {
                    b.HasOne("Sport_Shop.Areas.Admin.Models.EmployeeAccount", "EmployeeAccount")
                        .WithOne("Emoloyee")
                        .HasForeignKey("Sport_Shop.Areas.Admin.Models.Emoloyee", "EmployeeAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeAccount");
                });

            modelBuilder.Entity("Sport_Shop.Areas.Admin.Models.Order", b =>
                {
                    b.HasOne("Sport_Shop.Areas.Customer.Models.Customer", "customer")
                        .WithMany("orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("customer");
                });

            modelBuilder.Entity("Sport_Shop.Areas.Admin.Models.Product", b =>
                {
                    b.HasOne("Sport_Shop.Areas.Admin.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Sport_Shop.Areas.Admin.Models.ProductSize", b =>
                {
                    b.HasOne("Sport_Shop.Areas.Admin.Models.Product", "product")
                        .WithMany("productSizes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sport_Shop.Areas.Admin.Models.Size", "size")
                        .WithMany("productSizes")
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("product");

                    b.Navigation("size");
                });

            modelBuilder.Entity("Sport_Shop.Areas.Customer.Models.OrderDetail", b =>
                {
                    b.HasOne("Sport_Shop.Areas.Admin.Models.Order", "Order")
                        .WithMany("orderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sport_Shop.Areas.Admin.Models.Product", "Product")
                        .WithMany("orderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sport_Shop.Areas.Admin.Models.Size", "size")
                        .WithMany("orderDetails")
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");

                    b.Navigation("size");
                });

            modelBuilder.Entity("Sport_Shop.Areas.Admin.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Sport_Shop.Areas.Admin.Models.EmployeeAccount", b =>
                {
                    b.Navigation("Emoloyee")
                        .IsRequired();
                });

            modelBuilder.Entity("Sport_Shop.Areas.Admin.Models.Order", b =>
                {
                    b.Navigation("orderDetails");
                });

            modelBuilder.Entity("Sport_Shop.Areas.Admin.Models.Product", b =>
                {
                    b.Navigation("orderDetails");

                    b.Navigation("productSizes");
                });

            modelBuilder.Entity("Sport_Shop.Areas.Admin.Models.Size", b =>
                {
                    b.Navigation("orderDetails");

                    b.Navigation("productSizes");
                });

            modelBuilder.Entity("Sport_Shop.Areas.Customer.Models.Customer", b =>
                {
                    b.Navigation("orders");
                });
#pragma warning restore 612, 618
        }
    }
}
